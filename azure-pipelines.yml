# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
# https://github.com/SpecFlowOSS/SpecFlow/issues/1912
  MSBUILDSINGLELOADCONTEXT: 1  

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet publish --output .\bin\$(buildConfiguration)\publish --configuration $(buildConfiguration) --verbosity normal
  displayName: 'publish locally in order to be able to run tests'

- pwsh: 'Get-Content .\bin\$(buildConfiguration)\publish\wwwroot\service-worker-assets.js'
  displayName: 'Showing content of the published wwwroot\service-worker-assets.js (there should be no index.html in it)'

- task: WinAppDriver.winappdriver-pipelines-task.winappdriver-pipelines-task.Windows Application Driver@0
  displayName: 'Start - WinAppDriver'

- pwsh: '''WebDriver'', ''Appium.Net'' | ForEach-Object { Add-Type -Path ".\bin\$(buildConfiguration)\Selenium3Dependencies\netcoreapp3.1\$_.dll" }; .\RemindMeWhenIamAt.Tests\Trust-LocalhostSslCertificate.ps1'
  displayName: 'Trust localhost SSL certificate'

- script: dotnet test RemindMeWhenIamAt.Tests\RemindMeWhenIamAt.Tests.csproj --configuration $(buildConfiguration) --logger trx
  displayName: 'dotnet test RemindMeWhenIamAt.Tests\RemindMeWhenIamAt.Tests.csproj $(buildConfiguration)'

- task: WinAppDriver.winappdriver-pipelines-task.winappdriver-pipelines-task.Windows Application Driver@0
  displayName: 'Stop - WinAppDriver'
  inputs:
    OperationType: Stop
  continueOnError: true
  condition: always()

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  displayName: 'Publishing App...'
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --runtime portable --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  displayName: 'Publishing Build Artifacts...'